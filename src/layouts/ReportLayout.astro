---
import Layout from './Layout.astro';
import type { StrategicReport } from '../data/reports';

interface Props {
  report: StrategicReport;
}

const { report } = Astro.props;
const formattedDate = new Date(report.publishedDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Extract UTM parameters from URL for tracking (safely handle static generation)
let utmSource = null;
let utmMedium = null;
let utmCampaign = null;
let contactId = null;

try {
  if (Astro.request?.url) {
    const url = new URL(Astro.request.url);
    utmSource = url.searchParams.get('utm_source');
    utmMedium = url.searchParams.get('utm_medium');
    utmCampaign = url.searchParams.get('utm_campaign');
    contactId = url.searchParams.get('contact_id');
  }
} catch (error) {
  // Fallback for static generation - UTM params will be handled client-side
  console.log('URL parsing skipped during static generation');
}
---

<Layout title={report.title} description={report.description}>
  <!-- Tracking Script -->
  <script define:vars={{ reportId: report.id, contactId, utmSource, utmMedium, utmCampaign }}>
    // Track report view using unified tracking system
    fetch('/.netlify/functions/click-tracking', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        type: 'view',
        reportId,
        contactId,
        utmSource,
        utmMedium,
        utmCampaign,
        timestamp: new Date().toISOString(),
        userAgent: navigator.userAgent
      })
    }).catch(err => console.log('Analytics tracking failed:', err));
  </script>

  <article class="min-h-screen bg-gradient-to-b from-gray-50 to-white">
    <!-- Executive Header -->
    <div class="bg-gradient-to-r from-slate-900 via-blue-900 to-slate-900 text-white">
      <div class="max-w-4xl mx-auto px-4 py-16">
        <div class="mb-6">
          <span class="inline-flex items-center px-4 py-2 bg-blue-600/20 rounded-full text-sm font-medium backdrop-blur-sm border border-blue-400/30">
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            Strategic Report â€¢ {report.industry}
          </span>
        </div>
        <h1 class="text-4xl md:text-5xl font-bold mb-4 leading-tight">
          {report.title}
        </h1>
        <p class="text-xl text-blue-100 mb-8 leading-relaxed">
          {report.subtitle}
        </p>
        <div class="flex flex-wrap items-center gap-6 text-sm">
          <div class="flex items-center gap-3">
            <img 
              src={report.author.avatar} 
              alt={report.author.name}
              class="w-12 h-12 rounded-full border-2 border-white/20"
            />
            <div>
              <div class="font-medium">{report.author.name}</div>
              <div class="text-blue-200">{report.author.title}</div>
            </div>
          </div>
          <div class="text-blue-200">
            Published {formattedDate}
          </div>
          <div class="text-blue-200">
            {report.readTime} read
          </div>
        </div>
      </div>
    </div>

    <!-- Raw Content View -->
    <div class="max-w-4xl mx-auto px-4 py-12">
      <div class="bg-gray-900 text-green-400 p-6 rounded-lg shadow-lg mb-6">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-lg font-bold text-white flex items-center">
            <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
            </svg>
            Raw Markdown Content
          </h2>
          <button 
            onclick="navigator.clipboard.writeText(document.getElementById('raw-content').textContent).then(() => alert('Content copied to clipboard!'))"
            class="px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors"
          >
            Copy
          </button>
        </div>
        <div class="text-gray-300 text-sm mb-4">
          Company: <span class="text-white">{report.companyName}</span> | 
          Report ID: <span class="text-white">{report.id}</span> | 
          Slug: <span class="text-white">{report.companySlug}</span>
        </div>
      </div>
      
      <div class="bg-gray-50 border border-gray-200 rounded-lg p-6">
        <pre id="raw-content" class="whitespace-pre-wrap text-sm font-mono text-gray-800 leading-relaxed overflow-x-auto">{report.markdownContent || 'No raw markdown content available for this report.'}</pre>
      </div>
      
      <!-- Report Metadata -->
      <div class="mt-8 bg-white border border-gray-200 rounded-lg p-6">
        <h3 class="text-lg font-bold text-gray-900 mb-4">Report Metadata</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div><strong>Company:</strong> {report.companyName}</div>
          <div><strong>Industry:</strong> {report.industry}</div>
          <div><strong>Published:</strong> {formattedDate}</div>
          <div><strong>Author:</strong> {report.author.name}</div>
          <div><strong>Read Time:</strong> {report.readTime}</div>
          <div><strong>Report ID:</strong> {report.id}</div>
          <div><strong>Company Slug:</strong> {report.companySlug}</div>
          <div><strong>Is Dynamic:</strong> {report.isDynamic ? 'Yes' : 'No'}</div>
        </div>
        
        <div class="mt-4">
          <strong>Tags:</strong>
          <div class="flex flex-wrap gap-2 mt-2">
            {report.tags.map(tag => (
              <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">{tag}</span>
            ))}
          </div>
        </div>

        {report.campaignData && (
          <div class="mt-4">
            <strong>Campaign Data:</strong>
            <pre class="mt-2 text-xs bg-gray-100 p-2 rounded overflow-x-auto">{JSON.stringify(report.campaignData, null, 2)}</pre>
          </div>
        )}
      </div>

      <!-- CTA Section -->
      <section class="mt-12 bg-gradient-to-r from-blue-700 to-blue-800 text-white p-8 rounded-2xl shadow-xl">
        <h2 class="text-2xl font-bold mb-4">Ready to Transform Your Business?</h2>
        <p class="text-blue-100 mb-6 text-lg">
          This strategic analysis represents just the beginning. Let's discuss how we can implement these recommendations and drive measurable results for your organization.
        </p>
        <div class="flex flex-col sm:flex-row gap-4">
          <a 
            href="/contact?utm_source=report&utm_medium=cta&utm_campaign=strategic-consultation" 
            class="px-8 py-3 bg-white text-blue-700 rounded-full font-semibold hover:bg-blue-50 transition-colors text-center"
            onclick="trackEngagement('cta_click', 'contact')"
          >
            Schedule Strategic Consultation
          </a>
          <a 
            href="/services?utm_source=report&utm_medium=cta&utm_campaign=services" 
            class="px-8 py-3 border-2 border-white text-white rounded-full font-semibold hover:bg-white hover:text-blue-700 transition-colors text-center"
            onclick="trackEngagement('cta_click', 'services')"
          >
            Explore Our Services
          </a>
        </div>
      </section>
    </div>
  </article>

  <!-- Engagement Tracking Script -->
  <script define:vars={{ reportIdForTracking: report.id }}>
    function trackEngagement(type, action) {
      fetch('/.netlify/functions/click-tracking', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          type: type,
          action: action,
          reportId: reportIdForTracking,
          timestamp: new Date().toISOString()
        })
      }).catch(err => console.log('Engagement tracking failed:', err));
    }
  </script>

  <!-- Print Styles -->
  <style>
    @media print {
      .no-print { display: none !important; }
      body { background: white !important; }
      .bg-gradient-to-r, .bg-gradient-to-br { background: white !important; color: black !important; }
      .text-white { color: black !important; }
      .border { border: 1px solid #ccc !important; }
    }
  </style>
</Layout> 