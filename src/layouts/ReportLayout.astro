---
import Layout from './Layout.astro';
import type { StrategicReport } from '../data/reports';

interface Props {
  report: StrategicReport;
}

const { report } = Astro.props;

const formattedDate = new Date(report.publishedDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Extract UTM parameters from URL for tracking (safely handle static generation)
let utmSource = null;
let utmMedium = null;
let utmCampaign = null;
let contactId = null;

try {
  if (Astro.request?.url) {
    const url = new URL(Astro.request.url);
    utmSource = url.searchParams.get('utm_source');
    utmMedium = url.searchParams.get('utm_medium');
    utmCampaign = url.searchParams.get('utm_campaign');
    contactId = url.searchParams.get('contact_id');
  }
} catch (error) {
  // Fallback for static generation - UTM params will be handled client-side
  console.log('URL parsing skipped during static generation');
}
---

<Layout title={report.title} description={report.description}>
  <!-- Tracking Script -->
  <script define:vars={{ reportId: report.id, contactId, utmSource, utmMedium, utmCampaign }}>
    // Track report view using unified tracking system
    fetch('/.netlify/functions/click-tracking', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        type: 'view',
        reportId,
        contactId,
        utmSource,
        utmMedium,
        utmCampaign,
        timestamp: new Date().toISOString(),
        userAgent: navigator.userAgent
      })
    }).catch(err => console.log('Analytics tracking failed:', err));
  </script>

  <article class="min-h-screen bg-gradient-to-b from-gray-50 to-white">
    <!-- Table of Contents - Fixed Sidebar -->
    <div id="toc-sidebar" class="fixed left-0 top-0 h-full w-64 bg-white shadow-lg transform -translate-x-full transition-transform duration-300 z-40 no-print">
      <div class="p-6">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-bold text-gray-900">Contents</h3>
          <button onclick="toggleTOC()" class="text-gray-500 hover:text-gray-700">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <nav class="space-y-3">
          <a href="#report-content" class="toc-link block text-sm text-gray-600 hover:text-gray-900 py-2 px-3 rounded hover:bg-gray-50 transition-colors" onclick="scrollToSection('report-content')">Report Content</a>
          <a href="#metadata" class="toc-link block text-sm text-gray-600 hover:text-gray-900 py-2 px-3 rounded hover:bg-gray-50 transition-colors" onclick="scrollToSection('metadata')">Report Metadata</a>
        </nav>
      </div>
    </div>

    <!-- Overlay for mobile -->
    <div id="toc-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden no-print" onclick="toggleTOC()"></div>

    <!-- TOC Toggle Button -->
    <button onclick="toggleTOC()" class="fixed top-6 left-6 z-50 bg-white shadow-lg rounded-full p-3 hover:shadow-xl transition-shadow no-print">
      <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <!-- Executive Header -->
    <div class="bg-white border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-6 py-12">
        <div class="mb-3">
          <div class="text-sm font-medium text-gray-600 tracking-wider uppercase">
            Strategic Report â€¢ {report.industry}
          </div>
        </div>
        <h1 class="text-5xl md:text-6xl font-light text-gray-900 mb-6 leading-tight tracking-tight">
          {report.companyName}
        </h1>
        <p class="text-xl text-gray-600 mb-10 leading-relaxed max-w-4xl font-light">
          {report.subtitle}
        </p>
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-8 text-sm text-gray-500">
            <div class="font-medium text-gray-900">Possible Minds AI Agent</div>
            <div>Published {formattedDate}</div>
            <div>{report.readTime} read</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Executive Summary Cards -->
    <div id="executive-summary" class="max-w-7xl mx-auto px-6 pt-12">

    </div>

    <!-- Report Content -->
    <div id="report-content" set:html={report.htmlContent}></div>
      
      <!-- Report Metadata -->
      <div id="metadata" class="mt-8 bg-white border border-gray-200 rounded-lg p-6 max-w-7xl mx-auto">
        <h3 class="text-lg font-bold text-gray-900 mb-4">Report Metadata</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div><strong>Company:</strong> {report.companyName}</div>
          <div><strong>Industry:</strong> {report.industry}</div>
          <div><strong>Published:</strong> {formattedDate}</div>
          <div><strong>Author:</strong> {report.author.name}</div>
          <div><strong>Read Time:</strong> {report.readTime}</div>
          <div><strong>Report ID:</strong> {report.id}</div>
          <div><strong>Company Slug:</strong> {report.companySlug}</div>
          <div><strong>Is Dynamic:</strong> {report.isDynamic ? 'Yes' : 'No'}</div>
        </div>
        
        <div class="mt-4">
          <strong>Tags:</strong>
          <div class="flex flex-wrap gap-2 mt-2">
            {report.tags.map(tag => (
              <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">{tag}</span>
            ))}
          </div>
        </div>

        {report.campaignData && (
          <div class="mt-4">
            <strong>Campaign Data:</strong>
            <pre class="mt-2 text-xs bg-gray-100 p-2 rounded overflow-x-auto">{JSON.stringify(report.campaignData, null, 2)}</pre>
          </div>
        )}
      </div>

      <!-- CTA Section -->
      <section class="mt-12 bg-gradient-to-r from-blue-700 to-blue-800 text-white p-8 rounded-2xl shadow-xl max-w-7xl mx-auto">
        <h2 class="text-2xl font-bold mb-4">Ready to Transform Your Business?</h2>
        <p class="text-blue-100 mb-6 text-lg">
          This strategic analysis represents just the beginning. Let's discuss how we can implement these recommendations and drive measurable results for your organization.
        </p>
        <div class="flex flex-col sm:flex-row gap-4">
          <a 
            href="/contact?utm_source=report&utm_medium=cta&utm_campaign=strategic-consultation" 
            class="px-8 py-3 bg-white text-blue-700 rounded-full font-semibold hover:bg-blue-50 transition-colors text-center"
            onclick="trackEngagement('cta_click', 'contact')"
          >
            Schedule Strategic Consultation
          </a>
          <a 
            href="/services?utm_source=report&utm_medium=cta&utm_campaign=services" 
            class="px-8 py-3 border-2 border-white text-white rounded-full font-semibold hover:bg-white hover:text-blue-700 transition-colors text-center"
            onclick="trackEngagement('cta_click', 'services')"
          >
            Explore Our Services
          </a>
        </div>
      </section>
    </div>
  </article>

  <!-- Navigation and Interaction Scripts -->
  <script define:vars={{ reportIdForTracking: report.id }}>
    function trackEngagement(type, action) {
      fetch('/.netlify/functions/click-tracking', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          type: type,
          action: action,
          reportId: reportIdForTracking,
          timestamp: new Date().toISOString()
        })
      }).catch(err => console.log('Engagement tracking failed:', err));
    }

    // Table of Contents Toggle
    function toggleTOC() {
      const sidebar = document.getElementById('toc-sidebar');
      const overlay = document.getElementById('toc-overlay');
      
      if (sidebar.classList.contains('-translate-x-full')) {
        sidebar.classList.remove('-translate-x-full');
        overlay.classList.remove('hidden');
      } else {
        sidebar.classList.add('-translate-x-full');
        overlay.classList.add('hidden');
      }
    }

    // Smooth scroll to section
    function scrollToSection(sectionId) {
      const section = document.getElementById(sectionId);
      if (section) {
        section.scrollIntoView({ behavior: 'smooth', block: 'start' });
        toggleTOC(); // Close TOC after navigation
      }
    }

    // Toggle collapsible sections
    function toggleSection(contentId) {
      const content = document.getElementById(contentId);
      const icon = document.getElementById(contentId.replace('-content', '-icon'));
      
      if (content && icon) {
        if (content.style.display === 'none') {
          content.style.display = 'block';
          icon.style.transform = 'rotate(0deg)';
        } else {
          content.style.display = 'none';
          icon.style.transform = 'rotate(-90deg)';
        }
      }
    }

    // Highlight active TOC link based on scroll position
    function updateActiveTOCLink() {
      const sections = ['report-content', 'metadata'];
      const tocLinks = document.querySelectorAll('.toc-link');
      
      let activeSection = '';
      sections.forEach(sectionId => {
        const section = document.getElementById(sectionId);
        if (section) {
          const rect = section.getBoundingClientRect();
          if (rect.top <= 100 && rect.bottom >= 100) {
            activeSection = sectionId;
          }
        }
      });

      tocLinks.forEach(link => {
        link.classList.remove('bg-blue-50', 'text-blue-600', 'font-medium');
        if (link.getAttribute('href') === '#' + activeSection) {
          link.classList.add('bg-blue-50', 'text-blue-600', 'font-medium');
        }
      });
    }

    // Initialize page functionality
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll listener for TOC highlighting
      window.addEventListener('scroll', updateActiveTOCLink);
      
      // Close TOC when clicking outside
      document.addEventListener('click', function(e) {
        const sidebar = document.getElementById('toc-sidebar');
        const toggle = e.target.closest('button[onclick="toggleTOC()"]');
        if (!sidebar.contains(e.target) && !toggle && !sidebar.classList.contains('-translate-x-full')) {
          toggleTOC();
        }
      });
      
      // Initial TOC highlight
      updateActiveTOCLink();
    });
  </script>

  <!-- Custom Styles for Professional Typography -->
  <style>
    .prose {
      color: #374151;
      line-height: 1.7;
    }
    
    .prose h1 {
      color: #111827;
      font-weight: 800;
      font-size: 2.25rem;
      margin-top: 0;
      margin-bottom: 2rem;
      line-height: 1.2;
    }
    
    .prose h2 {
      color: #111827;
      font-weight: 700;
      font-size: 1.875rem;
      margin-top: 2rem;
      margin-bottom: 1rem;
      line-height: 1.3;
    }
    
    .prose h3 {
      color: #111827;
      font-weight: 600;
      font-size: 1.5rem;
      margin-top: 1.5rem;
      margin-bottom: 0.75rem;
      line-height: 1.4;
    }
    
    .prose p {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    
    .prose ul, .prose ol {
      margin-top: 1rem;
      margin-bottom: 1rem;
      padding-left: 1.625rem;
    }
    
    .prose li {
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }
    
    .prose blockquote {
      font-style: italic;
      border-left: 4px solid #3B82F6;
      padding-left: 1rem;
      margin: 1.5rem 0;
      color: #4B5563;
      background: #F8FAFC;
      padding: 1rem;
      border-radius: 0.5rem;
    }
    
    .prose strong {
      color: #111827;
      font-weight: 600;
    }
    
    .prose code {
      color: #DC2626;
      background: #FEF2F2;
      padding: 0.125rem 0.25rem;
      border-radius: 0.25rem;
      font-size: 0.875em;
    }
    
    .prose pre {
      background: #1F2937;
      color: #F9FAFB;
      padding: 1rem;
      border-radius: 0.5rem;
      overflow-x: auto;
      margin: 1.5rem 0;
    }
    
    .prose pre code {
      background: transparent;
      color: inherit;
      padding: 0;
    }
    
    .prose table {
      width: 100%;
      margin: 1.5rem 0;
      border-collapse: collapse;
    }
    
    .prose th, .prose td {
      border: 1px solid #E5E7EB;
      padding: 0.75rem;
      text-align: left;
    }
    
    .prose th {
      background: #F9FAFB;
      font-weight: 600;
    }
    
    @media print {
      /* Hide interactive elements */
      .no-print { display: none !important; }
      
      /* Reset backgrounds and colors for print */
      body { background: white !important; }
      .bg-gradient-to-r, .bg-gradient-to-br, .bg-gradient-to-b { 
        background: white !important; 
        color: black !important; 
      }
      .text-white { color: black !important; }
      .text-blue-100, .text-blue-200 { color: #374151 !important; }
      
      /* Optimize layout for print */
      .max-w-4xl, .max-w-6xl, .max-w-7xl { max-width: 100% !important; }
      .px-4, .px-6 { padding-left: 0.5rem !important; padding-right: 0.5rem !important; }
      
      /* Executive header adjustments */
      .bg-gradient-to-r.from-slate-900 {
        background: #f8fafc !important;
        color: black !important;
        border-bottom: 2px solid #e2e8f0 !important;
      }
      
      /* Cards and sections */
      .bg-white, .bg-gray-50, .bg-blue-50, .bg-purple-50, .bg-orange-50 {
        background: white !important;
        border: 1px solid #d1d5db !important;
      }
      
      .shadow-lg, .shadow-sm, .shadow-xl {
        box-shadow: none !important;
        border: 1px solid #d1d5db !important;
      }
      
      /* Typography improvements for print */
      .prose h1, .prose h2, .prose h3 {
        page-break-after: avoid;
      }
      
      .prose p, .prose li {
        orphans: 3;
        widows: 3;
      }
      
      /* Section breaks */
      #strategic-imperatives,
      #agent-recommendations,
      #report-content {
        page-break-before: avoid;
        page-break-inside: avoid;
      }
      
      /* Ensure content is expanded for print */
      [id$='-content'] {
        display: block !important;
      }
      
      /* Adjust spacing for print */
      .mb-8 { margin-bottom: 1rem !important; }
      .p-8 { padding: 1rem !important; }
      .p-6 { padding: 0.75rem !important; }
      
      /* Grid adjustments */
      .grid-cols-3 {
        grid-template-columns: repeat(3, 1fr) !important;
      }
      
      /* Footer and metadata */
      #metadata {
        page-break-before: avoid;
        border-top: 2px solid #374151 !important;
        margin-top: 2rem !important;
      }
    }
  </style>
</Layout> 