---
interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
  gradient: string;
}

const { title, description, icon, features, gradient } = Astro.props;
---

<div class="group h-full">
  <div class="h-full glass-card p-8 rounded-2xl relative border border-gray-100 bg-white/50 hover:border-gray-200 transition-all duration-300 hover:shadow-xl">
    <div class={`absolute inset-0 bg-gradient-to-br ${gradient} opacity-0 group-hover:opacity-5 rounded-2xl transition-opacity duration-500`}></div>
    
    <div class="relative space-y-6">
      <div class="w-14 h-14 rounded-xl bg-gradient-to-br from-primary-light to-primary flex items-center justify-center">
        <span class="material-icons text-2xl text-white">{icon}</span>
      </div>

      <div class="space-y-4">
        <h3 class="text-2xl font-semibold group-hover:text-primary transition-colors">{title}</h3>
        <p class="text-gray-600 leading-relaxed">{description}</p>
      </div>
      
      <div class="pt-6 border-t border-gray-100">
        <h4 class="text-sm font-semibold text-gray-900 mb-4">Key Features</h4>
        <ul class="grid gap-3">
          {features.map(feature => (
            <li class="flex items-center text-gray-700">
              <span class="material-icons text-primary/60 mr-2 text-sm">check_circle</span>
              <span class="text-sm">{feature}</span>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</div>

<style>
  .glass-card {
    backdrop-filter: blur(8px);
    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.8));
  }
</style>