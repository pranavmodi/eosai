---
interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
  gradient: string;
}

const { title, description, icon, features, gradient } = Astro.props;
---

<div class="group relative">
  <div class={`absolute inset-0 bg-gradient-to-br ${gradient} opacity-0 group-hover:opacity-5 rounded-2xl transition-opacity duration-500`}></div>
  <div class="glass-card p-8 rounded-2xl relative border border-gray-100 hover:border-gray-200 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl">
    <div class="flex items-start space-x-4">
      <div class="w-14 h-14 rounded-xl bg-gradient-to-br from-primary-light to-primary flex items-center justify-center shrink-0">
        <span class="material-icons text-2xl text-white">{icon}</span>
      </div>
      <div>
        <h3 class="text-xl font-semibold mb-2 group-hover:text-primary transition-colors">{title}</h3>
        <p class="text-gray-600 leading-relaxed">{description}</p>
      </div>
    </div>
    
    <div class="mt-8 pt-6 border-t border-gray-100">
      <h4 class="text-sm font-semibold text-gray-900 mb-4">Key Features</h4>
      <ul class="grid grid-cols-2 gap-3">
        {features.map(feature => (
          <li class="flex items-center text-gray-700 text-sm">
            <span class="material-icons text-primary/60 mr-2 text-base">check_circle</span>
            {feature}
          </li>
        ))}
      </ul>
    </div>
  </div>
</div>