---
interface Metric {
  value: string;
  label: string;
  description?: string;
}

interface Props {
  title?: string;
  description?: string;
  metrics: Metric[];
  columns?: 2 | 3 | 4;
  style?: 'cards' | 'minimal' | 'gradient';
}

const { 
  title, 
  description, 
  metrics, 
  columns = 3,
  style = 'cards'
} = Astro.props;
---

<section class="mb-16">
  {title && <h2 class="text-3xl font-bold mb-6">{title}</h2>}
  {description && <p class="text-gray-700 leading-relaxed mb-8">{description}</p>}
  
  {style === 'cards' && (
    <div class={`grid grid-cols-1 md:grid-cols-${columns} gap-6`}>
      {metrics.map(metric => (
        <div class="bg-white rounded-2xl shadow-lg p-8">
          <div class="text-4xl font-bold text-primary mb-2">{metric.value}</div>
          <div class="text-lg font-medium text-gray-900 mb-2">{metric.label}</div>
          {metric.description && (
            <p class="text-gray-600">{metric.description}</p>
          )}
        </div>
      ))}
    </div>
  )}

  {style === 'minimal' && (
    <div class={`grid grid-cols-1 md:grid-cols-${columns} gap-8`}>
      {metrics.map(metric => (
        <div class="text-center">
          <div class="text-4xl font-bold text-primary mb-2">{metric.value}</div>
          <div class="text-sm text-gray-600">{metric.label}</div>
        </div>
      ))}
    </div>
  )}

  {style === 'gradient' && (
    <div class={`grid grid-cols-1 md:grid-cols-${columns} gap-6`}>
      {metrics.map(metric => (
        <div class="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-xl p-6">
          <div class="text-4xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary mb-2">
            {metric.value}
          </div>
          <div class="font-medium text-gray-900 mb-1">{metric.label}</div>
          {metric.description && (
            <p class="text-sm text-gray-600">{metric.description}</p>
          )}
        </div>
      ))}
    </div>
  )}
</section> 