---
import Layout from '../layouts/Layout.astro';
import SectionHeader from '../components/shared/SectionHeader.astro';
---

<Layout title="Agent Readiness Audit">
  <section class="py-24 bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 relative overflow-hidden">
    <!-- Professional Background Elements -->
    <div class="absolute inset-0 bg-grid-pattern bg-repeat opacity-5"></div>
    <div class="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600"></div>
    
    <div class="container mx-auto px-4 relative z-10">
      <!-- Executive Header -->
      <div class="text-center mb-16">
        <div class="inline-flex items-center justify-center px-4 py-2 bg-blue-600/10 border border-blue-500/20 rounded-full mb-6">
          <svg class="w-4 h-4 text-blue-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
          </svg>
          <span class="text-blue-400 text-sm font-medium">STRATEGIC ASSESSMENT</span>
        </div>
        <h1 class="text-5xl md:text-6xl font-bold text-white mb-6 tracking-tight">
          Agent Readiness
          <span class="block text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-indigo-400">Scorecard</span>
        </h1>
        <p class="text-xl text-slate-300 max-w-3xl mx-auto leading-relaxed">
          Evaluate your organization's preparedness for AI agent integration with our comprehensive readiness assessment framework
        </p>
      </div>

      <div class="max-w-6xl mx-auto">
        <!-- Executive Summary Card -->
        <div class="bg-white/95 backdrop-blur-sm border border-white/20 rounded-3xl shadow-2xl mb-12 overflow-hidden">
          <div class="bg-gradient-to-r from-slate-50 to-blue-50 px-8 py-6 border-b border-slate-200">
            <div class="flex items-center justify-between">
              <div>
                <h2 class="text-2xl font-bold text-slate-900 mb-2">Assessment Overview</h2>
                <p class="text-slate-600">5 critical dimensions • 1-minute evaluation • Executive insights</p>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-blue-600">5</div>
                <div class="text-sm text-slate-500">Dimensions</div>
              </div>
            </div>
          </div>
          
          <!-- Progress Section -->
          <div class="p-8">
            <div class="mb-8">
              <div class="flex items-center justify-between mb-4">
                <span class="text-lg font-semibold text-slate-700">Assessment Progress</span>
                <span id="progress-text" class="text-2xl font-bold text-blue-600">0/5</span>
              </div>
              <div class="w-full bg-slate-200 rounded-full h-3">
                <div id="progress-bar" class="bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 h-3 rounded-full transition-all duration-700 ease-out shadow-lg" style="width: 0%"></div>
              </div>
              <div class="flex justify-between mt-2 text-sm text-slate-500">
                <span>Foundation</span>
                <span>Advanced</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Quiz Container -->
        <div id="quiz-container" class="bg-white/95 backdrop-blur-sm border border-white/20 rounded-3xl shadow-2xl transition-all duration-700">
          <div class="p-10 md:p-16">
            <form id="quiz-form">
              <!-- Questions will be injected here -->
            </form>
          </div>
        </div>

        <!-- Results Container -->
        <div id="results-container" class="bg-white/95 backdrop-blur-sm border border-white/20 rounded-3xl shadow-2xl transition-all duration-700 opacity-0 scale-95" hidden>
          <div class="p-8 md:p-12">
            <!-- Executive Score Header -->
            <div class="text-center mb-16">
              <div class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full mb-6 shadow-lg">
                <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                </svg>
              </div>
              <h2 class="text-4xl font-bold text-slate-900 mb-4">Readiness Assessment Complete</h2>
              <p class="text-xl text-slate-600 max-w-2xl mx-auto">Your organization's AI readiness profile has been analyzed across key dimensions</p>
            </div>

            <!-- Executive Score Display -->
            <div class="flex justify-center mb-16">
              <div class="relative">
                <div id="score-circle" class="w-48 h-48 rounded-full bg-gradient-to-br from-blue-600 via-indigo-600 to-purple-600 flex items-center justify-center shadow-2xl relative">
                  <div class="absolute inset-0 rounded-full bg-gradient-to-br from-blue-600 via-indigo-600 to-purple-600 opacity-20 blur-2xl"></div>
                  <div class="text-center relative z-10">
                    <span id="score" class="text-6xl font-bold text-white block">0%</span>
                    <span class="text-blue-100 text-lg font-medium">Readiness Score</span>
                  </div>
                </div>
                <!-- Score Ring -->
                <svg class="absolute inset-0 w-48 h-48 transform -rotate-90" viewBox="0 0 100 100">
                  <circle cx="50" cy="50" r="45" fill="none" stroke="rgba(59, 130, 246, 0.1)" stroke-width="4"/>
                  <circle id="score-ring" cx="50" cy="50" r="45" fill="none" stroke="url(#scoreGradient)" stroke-width="4" stroke-linecap="round" stroke-dasharray="283" stroke-dashoffset="283"/>
                </svg>
                <defs>
                  <linearGradient id="scoreGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                    <stop offset="0%" style="stop-color:#3b82f6"/>
                    <stop offset="100%" style="stop-color:#8b5cf6"/>
                  </linearGradient>
                </defs>
              </div>
            </div>

            <!-- Category Analysis -->
            <div id="category-scores" class="space-y-6 mb-16">
              <!-- Category scores will be injected here -->
            </div>

            <!-- Strategic Recommendations -->
            <div id="next-steps" class="border-t border-slate-200 pt-12">
              <!-- Next steps will be injected here -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slideInRight {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }

  #quiz-form .question-group {
    margin-bottom: 6rem;
    padding-bottom: 4rem;
    border-bottom: 1px solid rgba(226, 232, 240, 0.6);
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out forwards;
  }
  
  #quiz-form .question-group .flex {
    display: flex;
    align-items: flex-start;
    gap: 0;
  }
  
  #quiz-form .question-group:nth-child(1) { animation-delay: 0.1s; }
  #quiz-form .question-group:nth-child(2) { animation-delay: 0.2s; }
  #quiz-form .question-group:nth-child(3) { animation-delay: 0.3s; }
  #quiz-form .question-group:nth-child(4) { animation-delay: 0.4s; }
  #quiz-form .question-group:nth-child(5) { animation-delay: 0.5s; }
  
  #quiz-form .question-group:last-of-type {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  
  #quiz-form .question-number {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 3.5rem;
    height: 3.5rem;
    background: linear-gradient(135deg, #1e40af, #3730a3);
    color: white;
    border-radius: 50%;
    font-size: 1.25rem;
    font-weight: 700;
    margin-right: 0;
    box-shadow: 0 6px 20px rgba(30, 64, 175, 0.3);
    flex-shrink: 0;
    position: relative;
    min-width: 3.5rem;
    border: 2px solid red;
  }
  
  #quiz-form .question-number::after {
    content: '';
    position: absolute;
    inset: -3px;
    border-radius: 50%;
    background: linear-gradient(135deg, #1e40af, #3730a3);
    opacity: 0.2;
    z-index: -1;
  }
  
  #quiz-form .question-text-wrapper {
    flex: 1;
    margin-left: 1rem;
    padding-left: 0.5rem;
    border: 2px solid blue;
  }
  
  #quiz-form .question-text {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1e293b;
    line-height: 1.6;
    margin-bottom: 0;
    padding-top: 0.25rem;
    border: 2px solid green;
  }
  
  #quiz-form .question-separator {
    height: 1px;
    background: linear-gradient(90deg, transparent, rgba(30, 64, 175, 0.2), transparent);
    margin-left: 5.5rem;
  }
  
  #quiz-form .radio-label {
    display: flex;
    align-items: center;
    padding: 1.5rem 2rem;
    border: 2px solid #e2e8f0;
    border-radius: 1.5rem;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    background: white;
    position: relative;
    overflow: hidden;
    margin-bottom: 1.5rem;
  }
  
  #quiz-form .radio-label::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, #1e40af, #3730a3);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 0;
  }
  
  #quiz-form .radio-label:hover {
    border-color: #1e40af;
    transform: translateY(-3px);
    box-shadow: 0 20px 40px rgba(30, 64, 175, 0.15);
  }
  
  #quiz-form .radio-label:hover::before {
    opacity: 0.03;
  }
  
  #quiz-form input[type="radio"] {
    display: none;
  }
  
  #quiz-form .radio-custom-dot {
    width: 1.75rem;
    height: 1.75rem;
    border: 3px solid #cbd5e1;
    border-radius: 50%;
    margin-right: 1.5rem;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    z-index: 1;
  }
  
  #quiz-form .radio-custom-dot::after {
    content: '';
    width: 0.875rem;
    height: 0.875rem;
    border-radius: 50%;
    background: linear-gradient(135deg, #1e40af, #3730a3);
    transform: scale(0);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  #quiz-form input[type="radio"]:checked + .radio-custom-dot {
    border-color: #1e40af;
    background: linear-gradient(135deg, #1e40af, #3730a3);
    box-shadow: 0 0 0 6px rgba(30, 64, 175, 0.1);
  }
  
  #quiz-form input[type="radio"]:checked + .radio-custom-dot::after {
    transform: scale(1);
    background: white;
  }
  
  #quiz-form .radio-label.selected {
    border-color: #1e40af;
    background: linear-gradient(135deg, rgba(30, 64, 175, 0.02), rgba(55, 48, 163, 0.02));
    box-shadow: 0 0 0 4px rgba(30, 64, 175, 0.1);
  }
  
  #quiz-form .option-text {
    color: #334155;
    font-weight: 500;
    font-size: 1.125rem;
    position: relative;
    z-index: 1;
    line-height: 1.5;
  }
  
  #quiz-form .radio-label.selected .option-text {
    color: #1e40af;
    font-weight: 600;
  }
  
  .submit-btn {
    background: linear-gradient(135deg, #1e40af, #3730a3);
    color: white;
    font-weight: 700;
    font-size: 1.125rem;
    padding: 1.5rem 3rem;
    border-radius: 1.5rem;
    border: none;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(30, 64, 175, 0.3);
    letter-spacing: 0.025em;
  }
  
  .submit-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s;
  }
  
  .submit-btn:hover::before {
    left: 100%;
  }
  
  .submit-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 35px rgba(30, 64, 175, 0.4);
  }
  
  .submit-btn:active {
    transform: translateY(-1px);
  }

  #category-scores .category-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    background: linear-gradient(135deg, rgba(248, 250, 252, 0.8), rgba(241, 245, 249, 0.8));
    border-radius: 1.5rem;
    border: 1px solid rgba(226, 232, 240, 0.6);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }
  
  #category-scores .category-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  #category-scores .category-name {
    font-weight: 600;
    color: #1e293b;
    display: flex;
    align-items: center;
    font-size: 1.125rem;
  }
  
  #category-scores .category-icon {
    width: 2rem;
    height: 2rem;
    margin-right: 1rem;
    color: #1e40af;
    font-size: 1.5rem;
  }
  
  #category-scores .progress-container {
    display: flex;
    align-items: center;
    width: 55%;
  }
  
  #category-scores .progress-bar {
    height: 16px;
    width: 100%;
    background-color: #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
    margin-right: 1.5rem;
    position: relative;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  #category-scores .progress {
    height: 100%;
    background: linear-gradient(90deg, #1e40af, #3730a3);
    border-radius: 8px;
    transition: width 1.5s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    box-shadow: 0 2px 4px rgba(30, 64, 175, 0.3);
  }
  
  #category-scores .progress::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: shimmer 2.5s infinite;
  }
  
  #category-scores .score-text {
    font-weight: 700;
    color: #1e40af;
    min-width: 4rem;
    text-align: right;
    font-size: 1.125rem;
  }
  
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
  
  .recommendation-card {
    background: linear-gradient(135deg, rgba(30, 64, 175, 0.03), rgba(55, 48, 163, 0.03));
    border: 1px solid rgba(30, 64, 175, 0.15);
    border-radius: 1.5rem;
    padding: 2rem;
    position: relative;
    overflow: hidden;
  }
  
  .recommendation-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #1e40af, #3730a3);
  }
  
  .cta-button {
    background: linear-gradient(135deg, #1e40af, #3730a3);
    color: white;
    font-weight: 700;
    font-size: 1.125rem;
    padding: 1.5rem 3rem;
    border-radius: 1.5rem;
    text-decoration: none;
    display: inline-block;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 8px 25px rgba(30, 64, 175, 0.3);
    position: relative;
    overflow: hidden;
    letter-spacing: 0.025em;
  }
  
  .cta-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s;
  }
  
  .cta-button:hover::before {
    left: 100%;
  }
  
  .cta-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 35px rgba(30, 64, 175, 0.4);
    color: white;
  }
  
  .score-ring {
    transition: stroke-dashoffset 2s cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>

<script>
  const questions = [
    {
      question: "How would you describe your company's data collection and organization?",
      options: [
        { text: "Highly organized and centralized with structured databases and clear governance", score: 10 },
        { text: "Somewhat organized across different systems with some integration challenges", score: 7 },
        { text: "Loosely organized, primarily in spreadsheets and document repositories", score: 3 },
        { text: "No systematic data collection or organization processes in place", score: 0 },
      ],
      category: "Data Readiness",
      icon: "📊"
    },

    {
      question: "How well-defined are your business workflows and processes?",
      options: [
        { text: "Extensively documented with clear SOPs and regular optimization cycles", score: 10 },
        { text: "Well-defined in most areas but execution varies across teams", score: 7 },
        { text: "Basic workflows exist but lack formal documentation and consistency", score: 3 },
        { text: "Ad-hoc processes with minimal standardization or documentation", score: 0 },
      ],
      category: "Workflow Fit",
      icon: "⚙️"
    },

    {
      question: "What is your team's readiness for technology adoption and change management?",
      options: [
        { text: "Highly receptive with strong change management capabilities and training programs", score: 10 },
        { text: "Generally open with some resistance that can be addressed through communication", score: 7 },
        { text: "Mixed reactions with significant resistance to new technologies", score: 3 },
        { text: "Strong resistance with limited experience in technology adoption", score: 0 },
      ],
      category: "Team Buy-in",
      icon: "🤝"
    },

    {
      question: "How would you assess your current IT infrastructure and technical capabilities?",
      options: [
        { text: "Modern, cloud-native architecture with APIs and scalable infrastructure", score: 10 },
        { text: "Hybrid environment with modern cloud services and some legacy systems", score: 7 },
        { text: "Primarily on-premise with limited cloud integration and API capabilities", score: 3 },
        { text: "Basic IT infrastructure with minimal automation or integration capabilities", score: 0 },
      ],
      category: "Infrastructure Gaps",
      icon: "🏗️"
    },

    {
      question: "What is your organization's financial commitment and budget allocation for AI initiatives?",
      options: [
        { text: "Dedicated budget with clear ROI expectations and executive sponsorship", score: 10 },
        { text: "Flexible budget allocation based on demonstrated business value and ROI", score: 7 },
        { text: "Limited budget requiring strong business case and cost justification", score: 3 },
        { text: "No current budget allocation for AI or technology initiatives", score: 0 },
      ],
      category: "Financial Readiness",
      icon: "💰"
    },
  ];

  const form = document.getElementById('quiz-form');
  const quizContainer = document.getElementById('quiz-container');
  const resultsContainer = document.getElementById('results-container');
  const scoreSpan = document.getElementById('score');
  const categoryScoresDiv = document.getElementById('category-scores');
  const nextStepsDiv = document.getElementById('next-steps');
  const progressBar = document.getElementById('progress-bar');
  const progressText = document.getElementById('progress-text');
  const scoreRing = document.getElementById('score-ring');

  let answeredQuestions = 0;

  function updateProgress() {
    const progress = (answeredQuestions / questions.length) * 100;
    progressBar.style.width = `${progress}%`;
    progressText.textContent = `${answeredQuestions}/${questions.length}`;
  }

  function renderQuiz() {
    let html = '';
    questions.forEach((q, index) => {
      html += `<div class="question-group">`;
      html += `<div class="flex items-start mb-8">`;
      html += `<span class="question-number">${index + 1}</span>`;
      html += `<div class="question-text-wrapper">`;
      html += `<p class="question-text">${q.question}</p>`;
      html += `</div>`;
      html += `</div>`;
      html += `<div class="question-separator mb-6"></div>`;
      html += `<div class="flex flex-col space-y-4 ml-20">`;
      q.options.forEach((option, i) => {
        html += `
          <label class="radio-label">
            <input type="radio" name="q${index}" value="${option.score}" data-category="${q.category}" required>
            <span class="radio-custom-dot"></span>
            <span class="option-text">${option.text}</span>
          </label>
        `;
      });
      html += `</div></div>`;
    });
    html += `<div class="text-center mt-12"><button type="submit" class="submit-btn">Generate Readiness Report</button></div>`;
    form.innerHTML = html;

    form.querySelectorAll('input[type="radio"]').forEach(radio => {
      radio.addEventListener('change', (e) => {
        const groupName = e.target.name;
        const wasAnswered = document.querySelector(`input[name="${groupName}"]:checked`);
        
        if (!wasAnswered) {
          answeredQuestions++;
          updateProgress();
        }
        
        document.querySelectorAll(`input[name="${groupName}"]`).forEach(r => {
          r.parentElement.classList.remove('selected');
        });
        e.target.parentElement.classList.add('selected');
      });
    });
  }

  function animateValue(obj, start, end, duration) {
    let startTimestamp = null;
    const step = (timestamp) => {
      if (!startTimestamp) startTimestamp = timestamp;
      const progress = Math.min((timestamp - startTimestamp) / duration, 1);
      obj.innerHTML = `${Math.floor(progress * (end - start) + start)}%`;
      if (progress < 1) {
        window.requestAnimationFrame(step);
      }
    };
    window.requestAnimationFrame(step);
  }

  function animateScoreRing(percentage) {
    const circumference = 2 * Math.PI * 45; // r=45
    const offset = circumference - (percentage / 100) * circumference;
    scoreRing.style.strokeDashoffset = offset.toString();
  }

  function getCategoryIcon(category) {
    const categoryIcons = {
      "Data Readiness": "📊",
      "Workflow Fit": "⚙️",
      "Team Buy-in": "🤝",
      "Infrastructure Gaps": "🏗️",
      "Financial Readiness": "💰"
    };
    return categoryIcons[category] || "📋";
  }

  function getReadinessLevel(score) {
    if (score >= 80) return { level: "High", color: "text-green-600", bg: "bg-green-100", description: "Your organization demonstrates excellent readiness for AI agent implementation." };
    if (score >= 60) return { level: "Moderate", color: "text-yellow-600", bg: "bg-yellow-100", description: "Your organization shows good readiness with some areas for improvement." };
    if (score >= 40) return { level: "Limited", color: "text-orange-600", bg: "bg-orange-100", description: "Your organization has basic readiness but requires significant preparation." };
    return { level: "Low", color: "text-red-600", bg: "bg-red-100", description: "Your organization needs substantial preparation before AI agent implementation." };
  }

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    let totalScore = 0;
    const categoryScores = {};
    const categoryMaxScores = {};

    questions.forEach((q) => {
        if (!categoryScores[q.category]) {
            categoryScores[q.category] = 0;
            categoryMaxScores[q.category] = 0;
        }
        categoryMaxScores[q.category] += 10;
    });

    for (const [key, value] of formData.entries()) {
      const score = parseInt(value);
      totalScore += score;
      const input = form.querySelector(`input[name="${key}"]:checked`);
      const category = input.dataset.category;
      categoryScores[category] += score;
    }

    const maxScore = questions.length * 10;
    const percentageScore = (totalScore / maxScore) * 100;
    const readinessLevel = getReadinessLevel(percentageScore);

    // Animate score and ring
    animateValue(scoreSpan, 0, percentageScore.toFixed(0), 2000);
    setTimeout(() => animateScoreRing(percentageScore), 500);

    let categoryHtml = '<h3 class="text-3xl font-bold mb-8 text-slate-900">Dimension Analysis</h3>';
    for (const category in categoryScores) {
      const categoryPercentage = (categoryScores[category] / categoryMaxScores[category]) * 100;
      categoryHtml += `
        <div class="category-item">
          <div class="category-name">
            <span class="category-icon">${getCategoryIcon(category)}</span>
            ${category}
          </div>
          <div class="progress-container">
            <div class="progress-bar">
              <div class="progress" style="width: ${categoryPercentage.toFixed(0)}%;"></div>
            </div>
            <span class="score-text">${categoryPercentage.toFixed(0)}%</span>
          </div>
        </div>
      `;
    }
    categoryScoresDiv.innerHTML = categoryHtml;

    let nextStepsHtml = '<div class="recommendation-card">';
    nextStepsHtml += '<div class="flex items-center mb-6">';
    nextStepsHtml += `<div class="w-12 h-12 ${readinessLevel.bg} rounded-full flex items-center justify-center mr-4">`;
    nextStepsHtml += `<span class="text-2xl">${readinessLevel.level === 'High' ? '🚀' : readinessLevel.level === 'Moderate' ? '📈' : readinessLevel.level === 'Limited' ? '⚠️' : '🔧'}</span>`;
    nextStepsHtml += '</div>';
    nextStepsHtml += '<div>';
    nextStepsHtml += `<h3 class="text-2xl font-bold text-slate-900 mb-2">Readiness Level: <span class="${readinessLevel.color}">${readinessLevel.level}</span></h3>`;
    nextStepsHtml += `<p class="text-slate-600">${readinessLevel.description}</p>`;
    nextStepsHtml += '</div>';
    nextStepsHtml += '</div>';
    
    nextStepsHtml += '<div class="bg-slate-50 rounded-xl p-6 mb-8">';
    nextStepsHtml += '<h4 class="text-lg font-semibold text-slate-900 mb-4">Strategic Recommendations</h4>';
    
    if (percentageScore < 50) {
      nextStepsHtml += '<ul class="space-y-3 text-slate-700">';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Establish data governance frameworks and centralized data management systems</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Document and standardize key business workflows</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Develop change management and technology adoption strategies</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Assess IT infrastructure modernization requirements</li>';
      nextStepsHtml += '</ul>';
    } else if (percentageScore < 80) {
      nextStepsHtml += '<ul class="space-y-3 text-slate-700">';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Optimize existing data workflows and integration points</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Strengthen change management and training programs</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Develop AI implementation roadmap and pilot programs</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Establish success metrics and ROI tracking</li>';
      nextStepsHtml += '</ul>';
    } else {
      nextStepsHtml += '<ul class="space-y-3 text-slate-700">';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Proceed with AI agent implementation planning</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Identify high-impact use cases and pilot opportunities</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Develop advanced AI strategy and scaling roadmap</li>';
      nextStepsHtml += '<li class="flex items-start"><span class="text-blue-500 mr-2">•</span>Establish AI governance and continuous improvement processes</li>';
      nextStepsHtml += '</ul>';
    }
    nextStepsHtml += '</div>';
    
    nextStepsHtml += '<div class="text-center"><a href="/contact" class="cta-button">Schedule Executive Consultation</a></div>';
    nextStepsHtml += '</div>';
    nextStepsDiv.innerHTML = nextStepsHtml;

    // Animate out quiz container
    quizContainer.style.opacity = 0;
    quizContainer.style.transform = 'scale(0.95)';
    
    setTimeout(() => {
      quizContainer.hidden = true;
      resultsContainer.hidden = false;
      
      // Animate in results container
      setTimeout(() => {
        resultsContainer.style.opacity = 1;
        resultsContainer.style.transform = 'scale(1)';
      }, 50);
    }, 700);
  });

  // Initialize
  renderQuiz();
  updateProgress();
</script>
        </div>
      </div>
    </div>
  </section>
</Layout>
