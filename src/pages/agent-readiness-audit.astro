---
import Layout from '../layouts/Layout.astro';
import SectionHeader from '../components/shared/SectionHeader.astro';
---

<Layout title="Agent Readiness Audit">
  <section class="py-24 bg-gray-50 relative">
    <div class="absolute inset-0 bg-grid-pattern bg-repeat opacity-5"></div>
    <div class="container mx-auto px-4 relative z-10">
      <SectionHeader 
        title="Agent Readiness Scorecard"
        subtitle="Is your business ready for an AI agent? This 1-minute quiz will help you find out."
      />

      <div class="max-w-2xl mx-auto mt-12">
        <div id="quiz-container" class="bg-white p-8 rounded-lg shadow-lg transition-opacity duration-500">
          <form id="quiz-form">
            <!-- Questions will be injected here -->
          </form>
        </div>

        <div id="results-container" class="bg-white p-8 rounded-lg shadow-lg transition-opacity duration-500 opacity-0" hidden>
          <div class="text-center">
            <h2 class="text-2xl font-bold mb-2">Your Readiness Score:</h2>
            <div id="score-circle" class="w-32 h-32 rounded-full bg-gradient-to-r from-primary to-secondary flex items-center justify-center mx-auto mb-4">
              <span id="score" class="text-4xl font-bold text-white">0%</span>
            </div>
          </div>
          <div id="category-scores" class="space-y-3 mb-6">
            <!-- Category scores will be injected here -->
          </div>
          <div id="next-steps" class="border-t pt-6">
            <!-- Next steps will be injected here -->
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  #quiz-form .question-group {
    margin-bottom: 2rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #e5e7eb;
  }
  #quiz-form .question-group:last-of-type {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  #quiz-form .radio-label {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
  }
  #quiz-form .radio-label:hover {
    background-color: #f9fafb;
    border-color: #a5b4fc;
  }
  #quiz-form input[type="radio"] {
    display: none;
  }
  #quiz-form .radio-custom-dot {
    width: 1.25em;
    height: 1.25em;
    border: 2px solid #d1d5db;
    border-radius: 50%;
    margin-right: 0.75rem;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease-in-out;
  }
  #quiz-form .radio-custom-dot::after {
    content: '';
    width: 0.75em;
    height: 0.75em;
    border-radius: 50%;
    background-color: var(--primary-color);
    transform: scale(0);
    transition: transform 0.2s ease-in-out;
  }
  #quiz-form input[type="radio"]:checked + .radio-custom-dot {
    border-color: var(--primary-color);
  }
  #quiz-form input[type="radio"]:checked + .radio-custom-dot::after {
    transform: scale(1);
  }
  #quiz-form .radio-label.selected {
    background-color: #eef2ff;
    border-color: var(--primary-color);
  }
  #quiz-form .option-text {
    color: #374151;
  }
  #quiz-form .radio-label.selected .option-text {
    color: var(--primary-color);
    font-weight: 600;
  }

  #category-scores .category-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  #category-scores .progress-bar {
    height: 10px;
    width: 50%;
    background-color: #e5e7eb;
    border-radius: 5px;
    overflow: hidden;
  }
  #category-scores .progress {
    height: 100%;
    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
    border-radius: 5px;
    transition: width 0.5s ease-in-out;
  }
</style>

<script>
  const questions = [
    {
      question: "How would you describe your company's data collection and organization?",
      options: [
        { text: "Highly organized and centralized", score: 10 },
        { text: "Somewhat organized, but in different systems", score: 7 },
        { text: "Not very organized, mostly in spreadsheets and documents", score: 3 },
        { text: "We don't actively collect or organize data", score: 0 },
      ],
      category: "Data Readiness",
    },

    {
      question: "How well-defined are your business workflows?",
      options: [
        { text: "Very well-defined and documented", score: 10 },
        { text: "Somewhat defined, but not always followed", score: 7 },
        { text: "Loosely defined, everyone does their own thing", score: 3 },
        { text: "We don't have defined workflows", score: 0 },
      ],
      category: "Workflow Fit",
    },

    {
      question: "How open is your team to adopting new technologies?",
      options: [
        { text: "Very open and enthusiastic", score: 10 },
        { text: "Somewhat open, but with some skepticism", score: 7 },
        { text: "Resistant to change", score: 3 },
        { text: "We've never tried to introduce new technology", score: 0 },
      ],
      category: "Team Buy-in",
    },

    {
      question: "How would you describe your current IT infrastructure?",
      options: [
        { text: "Modern and scalable (cloud-based, APIs)", score: 10 },
        { text: "A mix of modern and legacy systems", score: 7 },
        { text: "Mostly legacy systems, on-premise servers", score: 3 },
        { text: "We don't have much of an IT infrastructure", score: 0 },
      ],
      category: "Infrastructure Gaps",
    },

    {
      question: "What is your budget for an AI agent?",
      options: [
        { text: "We have a dedicated budget", score: 10 },
        { text: "We can allocate funds if the ROI is clear", score: 7 },
        { text: "We have a very limited budget", score: 3 },
        { text: "We have no budget for this at the moment", score: 0 },
      ],
      category: "Financial Readiness",
    },
  ];

  const form = document.getElementById('quiz-form');
  const quizContainer = document.getElementById('quiz-container');
  const resultsContainer = document.getElementById('results-container');
  const scoreSpan = document.getElementById('score');
  const categoryScoresDiv = document.getElementById('category-scores');
  const nextStepsDiv = document.getElementById('next-steps');

  function renderQuiz() {
    let html = '';
    questions.forEach((q, index) => {
      html += `<div class="question-group">`;
      html += `<p class="font-semibold text-lg mb-4">${index + 1}. ${q.question}</p>`;
      html += `<div class="flex flex-col space-y-3">`;
      q.options.forEach((option, i) => {
        html += `
          <label class="radio-label">
            <input type="radio" name="q${index}" value="${option.score}" data-category="${q.category}" required>
            <span class="radio-custom-dot"></span>
            <span class="option-text">${option.text}</span>
          </label>
        `;
      });
      html += `</div></div>`;
    });
    html += `<button type="submit" class="w-full bg-primary text-white font-bold py-3 px-4 rounded-lg hover:bg-secondary transition-colors mt-4">Get Your Score</button>`;
    form.innerHTML = html;

    form.querySelectorAll('input[type="radio"]').forEach(radio => {
      radio.addEventListener('change', (e) => {
        const groupName = e.target.name;
        document.querySelectorAll(`input[name="${groupName}"]`).forEach(r => {
          r.parentElement.classList.remove('selected');
        });
        e.target.parentElement.classList.add('selected');
      });
    });
  }

  function animateValue(obj, start, end, duration) {
    let startTimestamp = null;
    const step = (timestamp) => {
      if (!startTimestamp) startTimestamp = timestamp;
      const progress = Math.min((timestamp - startTimestamp) / duration, 1);
      obj.innerHTML = `${Math.floor(progress * (end - start) + start)}%`;
      if (progress < 1) {
        window.requestAnimationFrame(step);
      }
    };
    window.requestAnimationFrame(step);
  }

  form.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    let totalScore = 0;
    const categoryScores = {};
    const categoryMaxScores = {};

    questions.forEach((q) => {
        if (!categoryScores[q.category]) {
            categoryScores[q.category] = 0;
            categoryMaxScores[q.category] = 0;
        }
        categoryMaxScores[q.category] += 10;
    });

    for (const [key, value] of formData.entries()) {
      const score = parseInt(value);
      totalScore += score;
      const input = form.querySelector(`input[name="${key}"]:checked`);
      const category = input.dataset.category;
      categoryScores[category] += score;
    }

    const maxScore = questions.length * 10;
    const percentageScore = (totalScore / maxScore) * 100;

    animateValue(scoreSpan, 0, percentageScore.toFixed(0), 1000);

    let categoryHtml = '<h3 class="text-xl font-bold mb-4">Category Breakdown:</h3>';
    for (const category in categoryScores) {
      const categoryPercentage = (categoryScores[category] / categoryMaxScores[category]) * 100;
      categoryHtml += `
        <div class="category-item">
          <span class="font-semibold">${category}</span>
          <div class="flex items-center w-2/3">
            <div class="progress-bar mr-2">
              <div class="progress" style="width: ${categoryPercentage.toFixed(0)}%;"></div>
            </div>
            <span class="font-semibold">${categoryPercentage.toFixed(0)}%</span>
          </div>
        </div>
      `;
    }
    categoryScoresDiv.innerHTML = categoryHtml;

    let nextStepsHtml = '<h3 class="text-xl font-bold mb-2">Our Recommendation:</h3>';
    if (percentageScore < 50) {
      nextStepsHtml += '<p class="text-gray-700">Your business shows potential, but some foundational work on data and workflows is recommended before fully implementing an AI agent. A free consultation could help pinpoint the most impactful first steps.</p>';
    } else if (percentageScore < 80) {
      nextStepsHtml += '<p class="text-gray-700">Your business is a strong candidate for AI integration. You have many of the right pieces in place. A free consultation could help you build a clear roadmap for a successful launch.</p>';
    } else {
      nextStepsHtml += '<p class="text-gray-700">Your business is highly prepared for an AI agent! You have a solid foundation in place. A free consultation would be a great next step to explore advanced use-cases and accelerate your AI journey.</p>';
    }
    nextStepsHtml += '<div class="mt-6 text-center"><a href="/contact" class="inline-block bg-primary text-white font-bold py-3 px-6 rounded-lg hover:bg-secondary transition-colors">Book Your Free Consultation</a></div>';
    nextStepsDiv.innerHTML = nextStepsHtml;

    quizContainer.style.opacity = 0;
    setTimeout(() => {
      quizContainer.hidden = true;
      resultsContainer.hidden = false;
      setTimeout(() => {
        resultsContainer.style.opacity = 1;
      }, 50);
    }, 500);
  });

  renderQuiz();
</script>
